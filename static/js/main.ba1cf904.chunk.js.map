{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["KJUR","require","ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","App","ZOOM_SDK_KEY","ZOOM_SDK_SECRET","sdkKey","leaveUrl","userName","userEmail","className","onClick","fetch","method","then","res","json","response","signature","meetingNumber","iat","Math","round","Date","getTime","oHeader","alg","typ","oPayload","mn","role","exp","appKey","tokenExp","sHeader","JSON","stringify","sPayload","jws","JWS","sign","createSignature","parseInt","console","log","meetingID","document","getElementById","style","display","init","success","join","passWord","tk","record","error","startMeeting","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4hBAOMA,GAHaC,EAAQ,KACZA,EAAQ,KACVA,EAAQ,KACRA,EAAQ,MAErBC,UAAQC,aAAa,mCAAoC,OAEzDD,UAAQE,cACRF,UAAQG,gBAERH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAgKLC,MA9Jf,WAEE,IAEIC,EAAe,uCACfC,EAAkB,uCAMlBC,EAAS,uCAGTC,EAAW,wDACXC,EAAW,OACXC,EAAY,uBA0HhB,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,+DACA,wBAAQC,QAtHhB,WACEC,MAhByB,qCAgBC,CACtBC,OAAQ,QACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GAGJ,IAAMC,EA0CV,SAAyBC,GACvB,IAAMC,EAAMC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAAQ,GAGlDC,EAAU,CAAEC,IAAK,QAASC,IAAK,OAE/BC,EAAW,CACftB,OAAQF,EACRyB,GAAIV,EACJW,KArES,EAsETV,IAAKA,EACLW,IATUX,EAAM,KAUhBY,OAAQ3B,EACR4B,SAAUb,EAAM,MAGZc,EAAUC,KAAKC,UAAUX,GACzBY,EAAWF,KAAKC,UAAUR,GAEhC,OADkBlC,EAAK4C,IAAIC,IAAIC,KAAK,QAASN,EAASG,EAAUhC,GA5D1CoC,CAAgBC,SAASzB,IAG3C,OAFA0B,QAAQC,IAAI3B,GA+DhB,SAAsBC,EAAW2B,GAC/BC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDrD,UAAQsD,KAAK,CACX3C,SAAUA,EACV4C,QAAS,SAACA,GACRR,QAAQC,IAAIO,GAEZvD,UAAQwD,KAAK,CACXlC,UAAWA,EACXC,cAAe0B,EACfrC,SAAUA,EACVF,OAAQA,EACRG,UAAWA,EACX4C,SA5FO,GA6FPC,GAzFc,GA0FdH,QAAS,SAACA,GACRR,QAAQC,IAAIO,GACZvD,UAAQ2D,OAAO,CACXA,QAAQ,KAGdC,MAAO,SAACA,GACNb,QAAQC,IAAIY,OAKlBA,MAAO,SAACA,GACNb,QAAQC,IAAIY,MA3FdC,CAAavC,EAAUwB,SAASzB,IACzBA,KACNyC,OAAM,SAAAF,GACPb,QAAQa,MAAMA,OA0GZ,iCCnJOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAK1BY,M","file":"static/js/main.ba1cf904.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { ZoomMtg } from '@zoomus/websdk';\r\n// import MyForm from './components/form';\r\nconst bodyParser = require('body-parser')\r\nconst crypto = require('crypto')\r\nconst cors = require('cors')\r\nconst KJUR = require('jsrsasign')\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.4.0/lib', '/av');\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load('en-US');\r\nZoomMtg.i18n.reload('en-US');\r\n\r\nfunction App() {\r\n\r\n  var API_KEY = 'pnnUcpQSS4-aV1pPrFi9Ng'\r\n  var API_SEC = 'hnZYNbmowkIs039SJE3MKx6umc4p29YxbA6H'\r\n  var ZOOM_SDK_KEY = 'RnGHHOJG8zC3K0WTOuAltmjmMye0NT0HsHbW'\r\n  var ZOOM_SDK_SECRET = 'RIJMIRrDa5LEVUlUjf0KC1T5pVUuhR0zBKL0'\r\n  // setup your signature endpoint here: https://github.com/zoom/meetingsdk-sample-signature-node.js\r\n  var signatureEndpoint = 'http://localhost:4000/'\r\n  var createMeetingEndpoint = 'https://54.165.82.130/createmeeting'\r\n  var getMeetingEndpoint = 'https://54.165.82.130/get_meetings'\r\n  // This Sample App has been updated to use SDK App type credentials https://marketplace.zoom.us/docs/guides/build/sdk-app\r\n  var sdkKey = 'RnGHHOJG8zC3K0WTOuAltmjmMye0NT0HsHbW'\r\n  var meetingNumber \r\n  var role = 1\r\n  var leaveUrl = 'https://Pusse-01.github.io/zoom_integration_react_app'\r\n  var userName = 'User'\r\n  var userEmail = 'meulabs.sl@gmail.com'\r\n  var passWord = ''\r\n  // pass in the registrant's token if your meeting or webinar requires registration. More info here:\r\n  // Meetings: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/meetings#join-registered\r\n  // Webinars: https://marketplace.zoom.us/docs/sdk/native-sdks/web/client-view/webinars#join-registered\r\n  var registrantToken = ''\r\n\r\n\r\nfunction get_meetings() {\r\n  fetch(getMeetingEndpoint, {\r\n      method: 'GET'\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      // console.log(response);\r\n      // meetingNumber = response;\r\n      const signature = createSignature(parseInt(response));\r\n      console.log(response)\r\n      startMeeting(signature,parseInt(response))\r\n      return response;\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n}\r\n\r\nfunction create_meeting() {\r\n  fetch(createMeetingEndpoint, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n    topic: \"TestA\",\r\n    agenda:\"testA\",\r\n    start_date:\"2022-06-04\",\r\n    start_time: \"15:59:00Z\"\r\n})\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      console.log(response)\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n}\r\n\r\n  // function getSignature() {\r\n  //   fetch(signatureEndpoint, {\r\n  //     method: 'POST',\r\n  //     headers: { 'Content-Type': 'application/json' },\r\n  //     body: JSON.stringify({\r\n  //       meetingNumber: meetingNumber,\r\n  //       role: role\r\n  //     })\r\n  //   }).then(res => res.json())\r\n  //   .then(response => {\r\n  //     startMeeting(response.signature)\r\n  //   }).catch(error => {\r\n  //     console.error(error)\r\n  //   })\r\n  // }\r\n\r\n  function createSignature(meetingNumber){\r\n    const iat = Math.round(new Date().getTime() / 1000) - 30;\r\n  const exp = iat + 60 * 60 * 2\r\n\r\n  const oHeader = { alg: 'HS256', typ: 'JWT' }\r\n\r\n  const oPayload = {\r\n    sdkKey: ZOOM_SDK_KEY,\r\n    mn: meetingNumber,\r\n    role: role,\r\n    iat: iat,\r\n    exp: exp,\r\n    appKey: ZOOM_SDK_SECRET,\r\n    tokenExp: iat + 60 * 60 * 2\r\n  }\r\n\r\n  const sHeader = JSON.stringify(oHeader)\r\n  const sPayload = JSON.stringify(oPayload)\r\n  const signature = KJUR.jws.JWS.sign('HS256', sHeader, sPayload, ZOOM_SDK_SECRET)\r\n  return signature;\r\n}\r\n\r\n  function startMeeting(signature, meetingID) {\r\n    document.getElementById('zmmtg-root').style.display = 'block'\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(success)\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingID,\r\n          userName: userName,\r\n          sdkKey: sdkKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          tk: registrantToken,\r\n          success: (success) => {\r\n            console.log(success)\r\n            ZoomMtg.record({\r\n                record: true\r\n            });\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n\r\n\r\n// function join_meeting(){\r\n//   get_meetings();\r\n//   console.log(meetingNumber)\r\n\r\n// }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        <h1>Zoom Meeting SDK Sample React</h1>\r\n        <button onClick={get_meetings}>Start Meeting</button>\r\n      </main>\r\n      {/* <main>\r\n  <div> \r\n    <button onClick={create_meeting}>Create Meeting</button>\r\n  </div>\r\n</main>\r\n<main>\r\n  <div> \r\n    <button onClick={get_meetings}>Get Meetings</button>\r\n  </div>\r\n</main> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}